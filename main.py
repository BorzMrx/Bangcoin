from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ParseMode
from config import  TELEGRAM_TOKEN
from aiogram.utils import executor

bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=("start"))
async def send_welcome(message: types.Message):
    welcome_message = (
        "üëã *–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –º–∏—Ä–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç —Å Bangcoin!* üéâ\n\n"
        "–Ø –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –∫—Ä–∏–ø—Ç–æ-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –≥–æ—Ç–æ–≤—ã–π –ø–æ–º–æ—á—å –≤–∞–º –ø–æ–∫–æ—Ä–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –≤–µ—Ä—à–∏–Ω—ã. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–æ–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏:\n\n"
        "üöÄ *–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã* - –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ —É–∑–Ω–∞–≤–∞–π—Ç–µ —Ü–µ–Ω—ã –Ω–∞ –≤–µ–¥—É—â–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.\n"
        "üìä *–ì–ª—É–±–æ–∫–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞* - –ü–æ–ª—É—á–∞–π—Ç–µ —Ç–æ—á–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã –∏ –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç—á–µ—Ç—ã.\n"
        "üì∞ *–ì–æ—Ä—è—á–∏–µ –Ω–æ–≤–æ—Å—Ç–∏* - –ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π –∏ —Ç—Ä–µ–Ω–¥–æ–≤.\n"
        "üîí *–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å* - –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.\n\n"
        "–ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start, —á—Ç–æ–±—ã —Ä–∞—Å–∫—Ä—ã—Ç—å –ø–æ–ª–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª Bangcoin. –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –º–∏—Ä –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –≤–º–µ—Å—Ç–µ —Å–æ –º–Ω–æ–π.\n\n"
        "–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ.\n\n"
        "üåü *Bangcoin* - –í–∞—à –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É –≤ –∫—Ä–∏–ø—Ç–æ–º–∏—Ä–µ!"
    )
    await message.answer(welcome_message, parse_mode=ParseMode.MARKDOWN)

    @dp.message_handler(commands=("help"))
    async def send_help(message: types.Message):
        help_message = (
            "üÜò *–ü–æ–º–æ—â—å –ø–æ Bangcoin* üÜò\n\n"
            "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –æ—Å–≤–æ–∏—Ç—å—Å—è –≤ –º–∏—Ä–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç. –í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n\n"
            "üîπ /start - –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º –∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
            "üîπ /help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ.\n"
            "üîπ /price [–Ω–∞–∑–≤–∞–Ω–∏–µ_–≤–∞–ª—é—Ç—ã] - –£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.\n"
            "üîπ /forecast [–Ω–∞–∑–≤–∞–Ω–∏–µ_–≤–∞–ª—é—Ç—ã] - –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.\n"
            "üîπ /news - –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –º–∏—Ä–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.\n"
            "üîπ /security - –°–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –∫—Ä–∏–ø—Ç–æ-–∞–∫—Ç–∏–≤–æ–≤.\n\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è!"
        )
        await message.answer(help_message, parse_mode=ParseMode.MARKDOWN)

@dp.message_handler(commands=["price"])
async def send_price(message: types.Message):
    price_message = (
        "üí± *–ö—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã* üí±\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ `/price [–Ω–∞–∑–≤–∞–Ω–∏–µ_–≤–∞–ª—é—Ç—ã]`, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.\n\n"
        "–ü—Ä–∏–º–µ—Ä: `/price BTC`"
    )
    await message.answer(price_message, parse_mode=ParseMode.MARKDOWN)

@dp.message_handler(commands=["forecast"])
async def send_forecast(message: types.Message):
    forecast_message = (
        "üîÆ *–ü—Ä–æ–≥–Ω–æ–∑ –∫—É—Ä—Å–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã* üîÆ\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ `/forecast [–Ω–∞–∑–≤–∞–Ω–∏–µ_–≤–∞–ª—é—Ç—ã]`, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.\n\n"
        "–ü—Ä–∏–º–µ—Ä: `/forecast ETH`"
    )
    await message.answer(forecast_message, parse_mode=ParseMode.MARKDOWN)

@dp.message_handler(commands=["news"])
async def send_news(message: types.Message):
    news_message = (
        "üì∞ *–ù–æ–≤–æ—Å—Ç–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç* üì∞\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/news`, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –º–∏—Ä–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç."
    )
    await message.answer(news_message, parse_mode=ParseMode.MARKDOWN)

@dp.message_handler(commands=["security"])
async def send_security(message: types.Message):
    security_message = (
        "üîí *–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç* üîí\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/security`, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –∫—Ä–∏–ø—Ç–æ-–∞–∫—Ç–∏–≤–æ–≤."
    )
    await message.answer(security_message, parse_mode=ParseMode.MARKDOWN)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates= True)